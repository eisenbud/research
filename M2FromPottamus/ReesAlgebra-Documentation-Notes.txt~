
document {
     Key => ReesAlgebra,
     Headline => "compute Rees algebras",
     " The goal of this package is to provide commands to compute the 
     Rees algebra of a module as it is defined in the paper ", EM "What is 
     the Rees algebra of a module?", " by Craig Huneke, David Eisenbud and 
     Bernd Ulrich. It also includes functions for computing many of 
     the structures that require a Rees algebra.  The included functions are 
     listed below. Examples of the use of each of the functions are included 
     with their documentation."
     }

-- We may want to change the examples.  Otherwise complete except that
-- we may want to give the full reference to Eisenbud Huneke Ulrich.
document {
     Key => {symmetricKernel,(symmetricKernel, Matrix)},
     Headline => "Compute the rees ring of the image of a matrix",
     Usage => "symmetricKernel(f)",
     Inputs => {"f" => {ofClass Matrix}},
     Outputs => {{ofClass Ideal, " defining the Rees ring of ", ofClass Matrix, " ", TT "f"}},	       
     PARA{}, "This function is the workhorse of all/most of the Rees algebra 
     functions in the package.  Most users will prefer to use one of the front 
     end commands ", TO "reesAlgebra", " or ", TO "reesIdeal", " and others.",
     EXAMPLE {
	  "R = QQ[a..e]",
	  "J = monomialCurveIdeal(R, {1,2,3})",
	  "symmetricKernel (gens J)"
     },
    "Let ", TT "I", " be the ideal returned and let ", TT "S", " be the ring it lives in 
    (also printed), then ", TT "S/I", " is isomorphic to 
    the Rees algebra ", TT "R[Jt]",  ".  We can get the same information
    above 
    using ", TT "reesIdeal(J)", ", see ", TO "reesIdeal", ".  Also 
    note that ", TT "S", " is multigraded allowing Macaulay2 to correctly 
    see that the variables of R now live in degree 0 and the new variables 
    needed to describe ", TT "R[Jt]", "as a k-algebra are in degree 1.",
    EXAMPLE {
	 "S = ring oo;",
	 "(monoid S).Options.Degrees"
	 },
    PARA{ TT "symmetricKernel", " can also be computed over a quotient 
    ring.  "},     
    EXAMPLE { 
     	  "R = QQ[x,y,z]/ideal(x*y^2-z^9)",
	  "J = ideal(x,y,z)",
	  "symmetricKernel(gens J)"
	  },
     "The many ways of working with this function allows the system 
     to compute both the classic Rees algebra of an ideal over a ring 
     (polynomial or quotient) and to compute the the Rees algebra of a 
     module or ideal using a universal embedding as described in the paper 
     of Eisenbud, Huneke and Ulrich.  It also allows different ways of 
     setting up the quotient ring.",
     SeeAlso => {reesIdeal, reesAlgebra, universalEmbedding},
     }


document {
     Key => [symmetricKernel, Variable],
     Headline=> "symmetricKernel introduces new variables and the option 
     Variable allows the user to specify a variable name for this purpose, 
     the default variable is", TT  "w", "but the default value of the option 
     is null."     
     }

--- needs work....
--- we are mappimg M to the dual of the syzygy of its dual.  
document { 
     Key => {universalEmbedding, (universalEmbedding,Module)},
     Headline => "Compute the universal embedding",
     Usage =>  "universalEmbedding M", 
     Inputs => {"M" => {ofClass Module, " over ", ofClass Ring}}, 
     Outputs => {{ofClass ModuleMap, " defining the universal embedding 
	       of the module ", TT "M", " given into a free module
 	       over the same ring as ", TT "M", "."}},
      PARA{}, "This function uses the transpose (dual) of the .  We
      first give a simple example looking at a syzygy matrix of the cube of
      the maximial ideal of a polynomial ring.",
      EXAMPLE {
 	  "S = ZZ/101[x,y,z];",
	  "FF=res ((ideal vars S)^3);",
	  "M=coker (FF.dd_2)",
	  "universalEmbedding M"
	  },
      PARA{},
     "A more complicated example.",
     EXAMPLE { 
	  "x = symbol x;",
	  "R=QQ[x_1..x_8];",
	  "m1=genericMatrix(R,x_1,2,2); m2=genericMatrix(R,x_5,2,2);",
	  "m=m1*m2",
	  "d1=minors(2,m1); d2=minors(2,m2);",
	  "M=matrix{{0,d1_0,m_(0,0),m_(0,1)},
               {0,0,m_(1,0),m_(1,1)},
	       {0,0,0,d2_0},
	       {0,0,0,0}}",
	  "M=M-(transpose M);",
	  "N= coker(res coker transpose M).dd_2",
	  "universalEmbedding(N)"
	  }
     }

document {
     Key => {reesIdeal, (reesIdeal,Ideal), (reesIdeal, Module), 
	  (reesIdeal,Ideal, RingElement), (reesIdeal,Module, RingElement)},
     Headline => "compute the defining ideal of the Rees Algebra",
     Usage =>  "reesIdeal(M)\n reesIdeal(I) \n reesIdeal(M,f) \n reesIdeal(I,f)",
     Inputs => {"M" => Module => "Any module over a quotient ring", 
	  "I" => Ideal => "Any ideal over a quotient ring",
	  "f" => RingElement => "Any non-zerodivisor 
	  mod the ideal or module"},
     Outputs => {{ofClass Ideal, " defining the Rees algebra of  
	       the ", ofClass Module, " ", TT "M"}},
     PARA{},
     "There are effectively two methods implemented in this package
     for computing the definiting ideal of a Rees algebra of a module or
     ideal over a quotient ring.  The first uses the code
     symmetricKernel which is based on Eisenbud, Huneke, Ulrich, and for
     ideals works as one might naively expect it to.  The second
     implementation can be much faster, but requires a user provided
     non-zerodivisor mod the ideal or module.  This algorithm saturates
     the ideal of the new variables times a presentation of the module with
     respect to the non-zerodivisor. We provide several examples below that
     include some meaningful time comparisons. ",
     EXAMPLE {
     	  "kk = ZZ/101;",
     	  "S=kk[x_0..x_4];",
     	  "i=monomialCurveIdeal(S,{2,3,5,6})",
     	  "time reesIdeal i;", -- 2.25 sec
     	  "time reesIdeal(i,i_0);" --.3 sec
     	  },
     "Another example illustrates the power and usage of the code.  We
     also show the output in this example.  While a bit messy, the
     user can see how we handle the degrees in both cases.",
     EXAMPLE { 
	  "S=kk[a,b,c]",
	  "m=matrix{{a,0},{b,a},{0,b}}",
	  "i=minors(2,m)",
	  "time reesIdeal i",
	  "res i",
	  "m=random(S^3,S^{4:-1})",
	  "i=minors(3,m);",
	  "time I=reesIdeal (i,i_0);", -- .05 sec
	  "transpose gens I",
	  "i=minors(2,m);",
	  "time I=reesIdeal (i,i_0);" -- 22 sec
	  },
     SeeAlso => {symmetricKernel, reesAlgebra}
     }


-- needs updating, like most of this documentation.
document {
     Key => [reesIdeal, Variable],
     Headline=> "symmetricKernel introduces new variables and the option 
     Variable allows the user to specify a variable name for this purpose, 
     the default variable is", TT  "w", "but the default value of the option 
     is null."     
     }

-- the output is a sequence pair and loadpackage is yelling at us. 
document {
     Key => {reesAlgebra, (reesAlgebra, Module), (reesAlgebra, Ideal), 
	  (reesAlgebra, Module, RingElement), (reesAlgebra, Ideal, RingElement)},
     Headline => "determine if the image of a matrix is of linear type",
     Usage =>  "isLinearType(M)",
     Inputs =>  {"M", "a"},
     Outputs => {{ofClass Sequence, "true if the module is of linear 
	  type and false otherwise."}},
     "Stuff."
     }

document {
     Key => [reesAlgebra, Variable],
     Headline=> "rees introduces new variables and the option 
     Variable allows the user to specify a variable name for this purpose, 
     the default is", TT  "w"     
     }

document {
     Key => {isLinearType, (isLinearType, Module), (isLinearType, Ideal), 
	  (isLinearType,Module, RingElement), (isLinearType, Ideal, RingElement)},
     Headline => "determine if the image of a matrix is of linear type",
     Usage =>  "isLinearType(M)",
     Inputs =>  {"M", "a"},
     Outputs => {{"true if the module is of linear 
	  type and false otherwise."}},
     "Stuff."
     }

document {
     Key => {normalCone, (normalCone, Ideal), (normalCone, Ideal, RingElement)},
     Headline => "",
     Usage =>  "normalCone(J)",
     Inputs =>  {"J" => Ideal => "input",
	  "a" => RingElement => "also input"},
     Outputs => {{"true if the ideal is of linear 
	  type and false otherwise."}},
     "Stuff."
     }

document {
     Key => [normalCone, Variable],
     Headline=> "symmetricKernel introduces new variables and the option 
     Variable allows the user to specify a variable name for this purpose, 
     the default variable is", TT  "w", "but the default value of the option 
     is null."     
     }


document {
     Key => {associatedGradedRing, (associatedGradedRing, Ideal),
	  (associatedGradedRing, Ideal, RingElement)},
     Headline => "",
     Usage =>  "associatedGradedRing(J)",
     Inputs =>  {"J" => Ideal => "input",
	  "a" => RingElement => "otherinput"},
     Outputs => {{"true if the ideal is of linear 
	  type and false otherwise."}},
     "Stuff."
     }

document {
     Key => [associatedGradedRing, Variable],
     Headline=> "symmetricKernel introduces new variables and the option 
     Variable allows the user to specify a variable name for this purpose, 
     the default variable is", TT  "w", "but the default value of the option 
     is null."     
     }

document {
     Key => {multiplicity, (multiplicity, Ideal), (multiplicity, Ideal, RingElement)},
     Headline => "compute the Hilbert-Samuel multiplicty of an ideal",
     Usage =>  "multiplicity I",
     Inputs =>  {"I" => Ideal => "input",
	  "a" => RingElement => "other input"},
     Outputs => {{"  that is the normalized leading 
	  coefficient of the associated graded ring of ", TT "R", 
	  " with respect to ", TT "I"}},
     "Stuff."
     }

document { 
     Key => {specialFiberIdeal, (specialFiberIdeal, Module), 
	  (specialFiberIdeal, Ideal), (specialFiberIdeal, Module, RingElement), 
	  (specialFiberIdeal, Ideal, RingElement)},
     Headline => "compute the special fiber of the image of a matrix over a", 
     "a quotient ring",
     Usage =>  "specialFiber(M)",
     Inputs =>  {"M","a"},
     Outputs => {{"defining the special fiber of ", TT "M"}},
     "Stuff."
     }


document {
     Key => [specialFiberIdeal, Variable],
     Headline=> "symmetricKernel introduces new variables and the option 
     Variable allows the user to specify a variable name for this purpose, 
     the default variable is", TT  "w", "but the default value of the option 
     is null."     
     }


document {
     Key => {analyticSpread, (analyticSpread,Module),(analyticSpread, Ideal), 
	  (analyticSpread, Module, RingElement), 
	  (analyticSpread, Ideal, RingElement)},  
     Headline => "compute the analytic spread of a module over a 
     quotient ring",
     Usage => "analyticSpread(M)",
     Inputs => {"M","a"},
     Outputs => {{"the dimension of the special fiber of ", TT "M"}},
               "Stuff."
     }	   

document {
     Key => {distinguished, (distinguished, Ideal), 
	  (distinguished, Ideal, RingElement)},
     Headline => "computes the distinguished subvarieties of a scheme",
     Usage => "distinguished I" ,
     Inputs =>  {"I" => {ofClass Ideal, " in ", ofClass PolynomialRing}},
     Outputs => {{ofClass List, " of prime ideals defining the components 
	  of the support of the normal cone over ", TT "I"}},
     "Stuff."
     }

document {
     Key => [distinguished, Variable],
     Headline=> "distinguished introduces new variables and the option 
     Variable allows the user to specify a variable name for this purpose, 
     the default is", TT  "w"     
     }

document {
     Key => {distinguishedAndMult, (distinguishedAndMult,Ideal),
	  (distinguishedAndMult, Ideal, RingElement)},
     Headline => "compute the distinguished subvarieties of a variety along 
     with their multiplicities",
     Usage => "distinguishedAndMult I" ,
     Inputs => {"I" => {ofClass Ideal, " in ", ofClass PolynomialRing}, 
	  "a" => {ofClass RingElement, "stuff."}},
     Outputs => {{ofClass List, " of pairs where the first entry 
	       is the multiplicity of the second entry which is one 
	       of the ideals defining a component of the support of 
	       the normal cone over ", TT "I"}},
     "Stuff."
     }

document {
     Key => [distinguishedAndMult, Variable],
     Headline=> "distinguishedAndMult introduces new variables and the option 
     Variable allows the user to specify a variable name for this purpose, 
     the default is", TT  "w"     
     }



