From psorin@shire.math.columbia.edu Tue Oct  7 08:57:26 1997
Received: from msri.org by chern.msri.org (8.8.2/HUB)
	id IAA17168; Tue, 7 Oct 1997 08:57:25 -0700 (PDT)
Received: (from smap@localhost) by msri.org (8.8.2/8.7.2) id IAA02525 for <de@msri.org>; Tue, 7 Oct 1997 08:57:24 -0700 (PDT)
Received: from shire.math.columbia.edu(128.59.209.11) by msri.org via smap (V1.3)
	id sma002509; Tue Oct  7 08:56:45 1997
Received: from fifthave.math.columbia.edu (fifthave.math.columbia.edu [128.59.209.23])
	by shire.math.columbia.edu (8.8.5/8.8.5) with ESMTP id LAA09685;
	Tue, 7 Oct 1997 11:56:40 -0400
Received: from localhost (psorin@localhost)
	by fifthave.math.columbia.edu (8.8.5/8.8.5) with SMTP id LAA03035;
	Tue, 7 Oct 1997 11:56:33 -0400
X-Authentication-Warning: fifthave.math.columbia.edu: psorin owned process doing -bs
Date: Tue, 7 Oct 1997 11:56:33 -0400 (EDT)
From: Sorin Popescu <psorin@shire.math.columbia.edu>
To: David Eisenbud <de@msri.org>
cc: Stillman Mike <mike@math.cornell.edu>
Subject: multisec2.m2 (May29) (this seems to have all experiments !)
In-Reply-To: <19971007000311.06687@msri.org>
Message-ID: <Pine.LNX.3.96.971007115341.702E-100000@fifthave.math.columbia.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Status: RO
Content-Length: 13861
Lines: 558

-- Problem: construct the variety of 3-secant lines, or 4-secant-lines,
-- or more generally of d-secant n-planes, to a variety X in P^r.

-- Idea 1: For multi-secant lines, 
-- restrict the equations to the (paramterized) line sa+tb 
-- and find the polynomials of low degree in s; the ideal generated by
-- their coefficients defined the set of a,b that lie on a secant line.
-- 

-- Example 1. Rational quartic in P^3
///
kk = ZZ/101
R = kk[A..D]
S = kk[s,t,a_0..a_3,b_0..b_3,MonomialOrder=>ProductOrder{2,8}]
m = matrix{{s,t}} * matrix{{a_0..a_3},{b_0..b_3}}
phi = map(S,R,m)

I = monomialCurve(R,{1,3,4})
I = ideal(A^3+B^3+C^3+D^3, A^4+B^4+C^4+D^4)
I = ker map(R,R,{A^5, A^4*B-A^3*B^2, A^3*B^2+A^2*B^3+A*B^4, B^5})

J = phi I
g = gens gb J
g = divideByVariable(g,t)

g = saturate(J, t)
g = saturate(g, s)
g = leadTerm(2,g);
mm = coefficients({0},g)
mons = mm_0
coeffs = mm_1
p = positions(0..numgens source mons-1, i -> degree mons_(0,i) <= {2})
trisecants = trim ideal (coeffs_p)
saturate(trisecants, ideal(a_0..a_3))
saturate(trisecants, ideal(b_0..b_3))

-- not used:
A = S/trisecants
phi = map(A,R,substitute(phi.matrix, A))
ker phi
g = divideByVariable(g,s)
mingens ideal g

--------------------------------------------------
k = 3 -- number of intersections
kk = ZZ/31991
R = kk[x_0..x_3]
S = kk[t,a_1,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1]
I = monomialCurve(R,{1,3,4})
phi = map(S,R,{1, t, a_1+t*b_1, a_2+t*b_2})
phi = map(S,R,{z^2, z*a_1+z*t, z*a_2+t*b_1, z*a_3+t*b_2})

J = phi I
J = saturate(J,z)
g = gens gb J
mm = coefficients({0},leadTerm(2,g))
mons = mm_0
coeffs = mm_1
p = positions(0..numgens source mons-1, i -> degree mons_(0,i) <= {k-1})
g = g_p
mn = coefficients({0},g)
L = trim ideal mn_1
L = saturate(L,z)
A = kk[b_1,b_2,a_1,a_2,a_3,z,MonomialOrder=>Eliminate 2]
L1 = substitute(L,A)
gb L1
selectInSubring(1,gens gb L1)
///
----------------------------------------------
experiment1 = () -> (
k = 4; -- number of intersections
kk = ZZ/31991;
R = kk[x_0..x_3];
S1 = kk[t,a_1,a_2,a_3,b_1,b_2,z];
S = kk[t,a_1,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1];
I = monomialCurve(R,{1,3,4});
I = ker map(R,R,{x_0^5, x_0^4*x_1-x_0^3*x_1^2, x_0^3*x_1^2+x_0^2*x_1^3+x_0*x_1^4, x_1^5});
--phi = map(S,R,{1, t, a_1+t*b_1, a_2+t*b_2})
phi = map(S,R,{z^2, z*a_1+z*t, z*a_2+t*b_1, z*a_3+t*b_2});
J = phi I;
J1 = substitute(J,S1);
use S1;
j1 = divideByVariable(gens gb J1,z);
J = substitute(j1,S);
use S;
g = gens gb J;
mm = coefficients({0},leadTerm(2,g));
mons = mm_0;
coeffs = mm_1;
p = positions(0..numgens source mons-1, i -> degree mons_(0,i) <= {k-1});
g = g_p;
mn = coefficients({0},g);
L = trim ideal mn_1;
L = saturate(L,z);
A = kk[b_1,b_2,a_1,a_2,a_3,z,MonomialOrder=>Eliminate 2];
L1 = substitute(L,A);
gb L1;
substitute(selectInSubring(1,gens gb L1), z=>1)
)



experiment3 = () -> (
k = 4; -- number of intersections
kk = ZZ/31991;
R = kk[x_0..x_3];
S1 = kk[t,a_1,a_2,a_3,b_1,b_2,z];
S = kk[t,a_1,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1];
I = monomialCurve(R,{1,3,4});
I = ker map(R,R,{x_0^5, x_0^4*x_1-x_0^3*x_1^2, x_0^3*x_1^2+x_0^2*x_1^3+x_0*x_1^4, x_1^5});
posk=positionsByDegrees(0,k-1,I);
Ik = (gens I)_posk;
phi = map(S,R,{z^2, z*a_1+z*t, z*a_2+t*b_1, z*a_3+t*b_2});
J = phi I;
Jk=phi Ik;
Jk = coefficients({0},Jk);
Jk = Jk_1;
J = J+ideal Jk;
--J1 = substitute(J,S1);
--use S1;
--j1 = divideByVariable(gens gb J1,z);
--J = substitute(j1,S);
--use S;
g = gens gb J;
mm = coefficients({0},leadTerm(2,g));
mons = mm_0;
coeffs = mm_1;
p = positions(0..numgens source mons-1, i -> degree mons_(0,i) <= {k-1});
g = g_p;
mn = coefficients({0},g);
L = trim ideal mn_1;
L = saturate(L,z);
A = kk[b_1,b_2,a_1,a_2,a_3,z,MonomialOrder=>Eliminate 2];
L1 = substitute(L,A);
gb L1;
substitute(selectInSubring(1,gens gb L1), z=>1)
)


experiment3 = () -> (
k = 4; -- number of intersections
kk = ZZ/31991;
R = kk[x_0..x_3];
S1 = kk[t,a_1,a_2,a_3,b_1,b_2,z];
S = kk[t,a_1,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1];
I = monomialCurve(R,{1,3,4});
I = ker map(R,R,{x_0^5, x_0^4*x_1-x_0^3*x_1^2, x_0^3*x_1^2+x_0^2*x_1^3+x_0*x_1^4, x_1^5});
posk=positionsByDegrees(0,k-1,I);
Ik = (gens I)_posk;
phi = map(S,R,{z^2, z*a_1+z*t, z*a_2+t*b_1, z*a_3+t*b_2});
J = phi I;
Jk=phi Ik;
Jk = coefficients({0},Jk);
Jk = Jk_1;
J = J+ideal Jk;
J1 = substitute(J,S1);
use S1;
j1 = divideByVariable(gens gb J1,z);
J = substitute(j1,S);
use S;
g = gens gb J;
mm = coefficients({0},leadTerm(2,g));
mons = mm_0;
coeffs = mm_1;
p = positions(0..numgens source mons-1, i -> degree mons_(0,i) <= {k-1});
g = g_p;
mn = coefficients({0},g);
L = trim ideal mn_1;
L = saturate(L,z);
A = kk[b_1,b_2,a_1,a_2,a_3,z,MonomialOrder=>Eliminate 2];
L1 = substitute(L,A);
gb L1;
substitute(selectInSubring(1,gens gb L1), z=>1)
)



experiment3p = () -> (
-- 4-secant of a quintic with a unique quadrisecant, computed by the
-- pushforward method.
k = 4; -- number of intersections
kk = ZZ/31991;
R = kk[x_0..x_3];
I = ker map(R,R,{x_0^5, x_0^4*x_1-x_0^3*x_1^2, x_0^3*x_1^2+x_0^2*x_1^3+x_0*x_1^4, x_1^5});
S1 = kk[t,a_1,a_2,a_3,b_1,b_2,z];
Sbase = kk[a_1,a_2,a_3,b_1,b_2,z];
S = kk[t,a_1,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1];
posk = positionsByDegrees(0,k-1,I);
Ik = (gens I)_posk;
phi = map(S,R,{z^2, z*a_1+z*t, z*a_2+t*b_1, z*a_3+t*b_2});
J = phi I;
Jk=phi Ik;
Jk = coefficients({0},Jk);
Jk = Jk_1;
J = J+ideal Jk;
J1 = substitute(J,S1);
use S1;
j1 = divideByVariable(gens gb J1,z);
A=S1/ideal j1;
f = map(A,Sbase);
M = pushForward(f,A^1);
dets=minors(numgens M - k + 1, presentation M);
L = trim dets;
use Sbase;
L = saturate(L,z);
A = kk[b_1,b_2,a_1,a_2,a_3,z,MonomialOrder=>Eliminate 2];
L1 = substitute(L,A);
gb L1;
substitute(selectInSubring(1,gens gb L1), z=>1)
)


///
J = substitute(j1,S);
use S;
g = gens gb J;
mm = coefficients({0},leadTerm(2,g));
mons = mm_0;
coeffs = mm_1;
p = positions(0..numgens source mons-1, i -> degree mons_(0,i) <= {k-1});
g = g_p;
mn = coefficients({0},g);
L = trim ideal mn_1;
L = saturate(L,z);
A = kk[b_1,b_2,a_1,a_2,a_3,z,MonomialOrder=>Eliminate 2];
L1 = substitute(L,A);
gb L1;
substitute(selectInSubring(1,gens gb L1), z=>1)
)
///

experiment4 = () -> (
--4-secants to the interesection of a cubic and a quadric.
-- finds only 18 of the 27 because we're still working in just
-- one open set of the Grassmannian.
k = 4; -- number of intersections
kk = ZZ/31991;
R = kk[x_0..x_3];
I = ideal(sum(4,i->x_i^4),sum(4,i->x_i^3));
S1 = kk[t,a_1,a_2,a_3,b_1,b_2,z];
S = kk[t,a_1,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1];
posk=positionsByDegrees(0,k-1,I);
Ik = (gens I)_posk;
phi = map(S,R,{z^2, z*a_1+z*t, z*a_2+t*b_1, z*a_3+t*b_2});
J = phi I;
Jk=phi Ik;
Jk = coefficients({0},Jk);
Jk = Jk_1;
J = J+ideal Jk;
J1 = substitute(J,S1);
use S1;
j1 = divideByVariable(gens gb J1,z);
J = substitute(j1,S);
use S;
g = gens gb J;
mm = coefficients({0},leadTerm(2,g));
mons = mm_0;
coeffs = mm_1;
p = positions(0..numgens source mons-1, i -> degree mons_(0,i) <= {k-1});
g = g_p;
mn = coefficients({0},g);
L = trim ideal mn_1;
L = saturate(L,z);
A = kk[b_1,b_2,a_1,a_2,a_3,z,MonomialOrder=>Eliminate 2];
L1 = substitute(L,A);
gb L1;
substitute(selectInSubring(1,gens gb L1), z=>1)
)


experiment4p = () -> (
-- 4-secant of a quintic with a unique quadrisecant, computed by the
-- pushforward method.
k = 4; -- number of intersections
kk = ZZ/31991;
R = kk[x_0..x_3];
I = ideal(sum(4,i->x_i^4),sum(4,i->x_i^3));
S1 = kk[t,a_1,a_2,a_3,b_1,b_2,z];
Sbase = kk[a_1,a_2,a_3,b_1,b_2,z];
S = kk[t,a_1,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1];
posk = positionsByDegrees(0,k-1,I);
Ik = (gens I)_posk;
phi = map(S,R,{z^2, z*a_1+z*t, z*a_2+t*b_1, z*a_3+t*b_2});
J = phi I;
Jk=phi Ik;
Jk = coefficients({0},Jk);
Jk = Jk_1;
J = J+ideal Jk;
J1 = substitute(J,S1);
use S1;
j1 = divideByVariable(time gens gb J1,z);
A=S1/ideal j1;
f = map(A,Sbase);
time M = pushForward(f,A^1);
dets=minors(numgens M - k + 1, presentation M);
L = trim dets;
use Sbase;
L = saturate(L,z);
A = kk[b_1,b_2,a_1,a_2,a_3,z,MonomialOrder=>Eliminate 2];
L1 = substitute(L,A);
gb L1;
substitute(selectInSubring(1,gens gb L1), z=>1)
)

positionsByDegrees= (lo,high,I)->(
     positions(0..numgens source gens I-1, i -> 
	  degree I_i >={lo} and degree I_i <= {high})
     )

     
experiment5 = () -> (
-- 4-secants to the interesection of a cubic and a quadric.
-- finds only 18 of the 27 because we're still working in just
-- one open set of the Grassmannian.
--DONE WITHOUT THE FIRST SATURATION!
k = 4; -- number of intersections
kk = ZZ/31991;
R = kk[x_0..x_3];
I = ideal(sum(4,i->x_i^4),sum(4,i->x_i^3));
S1 = kk[t,a_1,a_2,a_3,b_1,b_2,z];
S = kk[t,a_1,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1];
posk=positionsByDegrees(0,k-1,I);
Ik = (gens I)_posk;
phi = map(S,R,{z^2, z*a_1+z*t, z*a_2+t*b_1, z*a_3+t*b_2});
J = phi I;
Jk=phi Ik;
Jk = coefficients({0},Jk);
Jk = Jk_1;
J = J+ideal Jk;
--J1 = substitute(J,S1);
--use S1;
--j1 = divideByVariable(gens gb J1,z);
--J = substitute(j1,S);
--use S;
g = gens gb J;
mm = coefficients({0},leadTerm(2,g));
mons = mm_0;
coeffs = mm_1;
p = positions(0..numgens source mons-1, i -> degree mons_(0,i) <= {k-1});
g = g_p;
mn = coefficients({0},g);
L = trim ideal mn_1;
L = saturate(L,z);
A = kk[b_1,b_2,a_1,a_2,a_3,z,MonomialOrder=>Eliminate 2];
L1 = substitute(L,A);
gb L1;
substitute(selectInSubring(1,gens gb L1), z=>1)
)




ms1 = (k,I) -> (
-- k-secants to the curve defined in P^3 by I (one open set)
-- one open set of the Grassmannian.
--DONE WITHOUT THE FIRST SATURATION!
R = ring I;
kk =coefficientRing R;
a:=quote a;
b:=quote b;
z:=quote z;
S1 = kk[t,a_1,a_2,a_3,b_1,b_2,z];
S = kk[t,a_1,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1];
posk=positionsByDegrees(0,k-1,I);
compk = set elements(0..(numgens I -1)) - set posk;
compk = elements compk;
Ik = (gens I)_posk;
if  numgens source Ik>=2 then 
    Ik=gens (ideal Ik  : ideal (gens I)_(compk)) ;
phi = map(S,R,{z^2, z*a_1+z*t, z*a_2+t*b_1, z*a_3+t*b_2});
J = phi I;
Jk=phi Ik;
Jk = coefficients({0},Jk);
Jk = Jk_1;
J = J+ideal Jk;
--J1 = substitute(J,S1);
--use S1;
--j1 = divideByVariable(gens gb J1,z);
--J = substitute(j1,S);
--use S;
g = gens gb J;
mm = coefficients({0},leadTerm(2,g));
mons = mm_0;
coeffs = mm_1;
p = positionsByDegrees(0, k-1, ideal mons);
--p = positions(0..numgens source mons-1, i -> degree mons_(0,i) <= {k-1});
g = g_p;
mn = coefficients({0},g);
L = trim ideal mn_1;
L = saturate(L,z);
A = kk[b_1,b_2,a_1,a_2,a_3,z,MonomialOrder=>Eliminate 2];
L1 = substitute(L,A);
f=map(R,A,{0,0,R_1,R_2,R_3,R_0});
f selectInSubring(1,gens gb L1)
)

ms2 = (k,I) -> (
-- k-secants to the curve defined in P^3 by I (one open set)
-- one open set of the Grassmannian.
--DONE WITHOUT THE FIRST SATURATION!
R = ring I;
kk =coefficientRing R;
a:=quote a;
b:=quote b;
z:=quote z;
--S1 = kk[t,a_2,a_3,b_1,b_2,z];
S = kk[t,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1];
posk=positionsByDegrees(0,k-1,I);
compk = set elements(0..(numgens I -1)) - set posk;
compk = elements compk;
Ik = (gens I)_posk;
if  numgens source Ik>=2 then 
    Ik=gens (ideal Ik  : ideal (gens I)_(compk)) ;
phi = map(S,R,{z^2, z*t, z*a_2+t*b_1, z*a_3+t*b_2});
J = phi I;
Jk=phi Ik;
Jk = coefficients({0},Jk);
Jk = Jk_1;
J = J+ideal Jk;
--J1 = substitute(J,S1);
--use S1;
--j1 = divideByVariable(gens gb J1,z);
--J = substitute(j1,S);
--use S;
g = gens gb J;
mm = coefficients({0},leadTerm(2,g));
mons = mm_0;
coeffs = mm_1;
p = positionsByDegrees(0, k-1, ideal mons);
--p = positions(0..numgens source mons-1, i -> degree mons_(0,i) <= {k-1});
g = g_p;
mn = coefficients({0},g);
L = trim ideal mn_1;
L = saturate(L,z);
A=S/L; 
ker map(A,R, substitute(phi.matrix,A))
)


ms2p = (k,I) -> (
     -- k-secant variety to I in P^3 via pushforward
R = ring I;
kk =coefficientRing R;
a:=quote a;
b:=quote b;
z:=quote z;
S = kk[t,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1];
posk=positionsByDegrees(0,k-1,I);
compk = set elements(0..(numgens I -1)) - set posk;
compk = elements compk;
Ik = (gens I)_posk;
if  numgens source Ik>=2 then 
    Ik=gens (ideal Ik  : ideal (gens I)_(compk)) ;
phi = map(S,R,{z^2, z*t, z*a_2+t*b_1, z*a_3+t*b_2});
J = phi I;
Jk=phi Ik;
Jk = coefficients({0},Jk);
Jk = Jk_1;
J = J+ideal Jk;
--J1 = substitute(J,S1);
--use S1;
--j1 = divideByVariable(gens gb J1,z);
--J = substitute(j1,S);
--use S;
g = gens gb J;
mm = coefficients({0},leadTerm(2,g));
mons = mm_0;
coeffs = mm_1;
p = positionsByDegrees(0, k-1, ideal mons);
--p = positions(0..numgens source mons-1, i -> degree mons_(0,i) <= {k-1});
g = g_p;
mn = coefficients({0},g);
L = trim ideal mn_1;
L = saturate(L,z);
A=S/L; 
ker map(A,R, substitute(phi.matrix,A))
)







S1 = kk[t,a_1,a_2,a_3,b_1,b_2,z];
Sbase = kk[a_1,a_2,a_3,b_1,b_2,z];
S = kk[t,a_1,a_2,a_3,b_1,b_2,z,MonomialOrder=>Eliminate 1];
posk = positionsByDegrees(0,k-1,I);
Ik = (gens I)_posk;
phi = map(S,R,{z^2, z*a_1+z*t, z*a_2+t*b_1, z*a_3+t*b_2});
J = phi I;
Jk=phi Ik;
Jk = coefficients({0},Jk);
Jk = Jk_1;
J = J+ideal Jk;
J1 = substitute(J,S1);
use S1;
j1 = divideByVariable(time gens gb J1,z);
A=S1/ideal j1;
f = map(A,Sbase);
time M = pushForward(f,A^1);
dets=minors(numgens M - k + 1, presentation M);
L = trim dets;
use Sbase;
L = saturate(L,z);
A = kk[b_1,b_2,a_1,a_2,a_3,z,MonomialOrder=>Eliminate 2];
L1 = substitute(L,A);
gb L1;
substitute(selectInSubring(1,gens gb L1), z=>1)
)






     kk=ZZ/101;
     R = kk[x_0..x_3];
     -- complete intersection of cubic and quartic
     I1 = ideal(sum(4,i->x_i^4),sum(4,i->x_i^3));
     


     -- rational quintic with unique quadrisecant
     --188.81 sec for k=3
     I2 = ker map(R,R,{x_0^5, x_0^4*x_1-x_0^3*x_1^2, x_0^3*x_1^2+x_0^2*x_1^3+x_0*x_1^4, x_1^5});



     I3 = monomialCurve(R,{1,3,4});
     

///
time ms1(3,I3) ---1.42 sec
time ms2(3,I3) ---1.81 sec

time ms1(4,I2) ---1.74 sec
time ms2(4,I2) ---2.09 sec

time ms1(3,I2) ---185.83 sec
time ms2(3,I2) ---32.1 sec

time ms1(3,I1) ---BAD
time ms2(3,I1) 

time ms1(4,I1) ---23.4 sec 
time ms2(4,I1) ---3.6 sec
///











