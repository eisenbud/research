symmetricKernel=(I,f)->(     R:=ring I;     oldvarlist:=flatten entries vars R;     nR:=rank source vars R;     mtar:=-(min flatten degrees target f)+1;     msource:=-(min flatten degrees source f)+1;     tardeglist:=degrees source vars R | degrees target (f**R^{-mtar});     Rtar1:=kk[oldvarlist,Y_1..Y_(rank target f),Degrees=>tardeglist];     ;--     sourcedeglist=degrees source vars R | degrees source (f**R^{-msource});--     Rsource:=kk[oldvarlist, X_1..X_(rank source f),Degrees=>sourcedeglist];     ;     oldvars1:=(vars Rtar1)_{0..nR-1};     Itar:= substitute(I,oldvars1);     Rtar = Rtar1/Itar;     ;     ntarf:=rank target f;     oldvars := (vars Rtar)_{0..nR-1};;     RtoRtar := map(Rtar, R, oldvars);     ;     g:=oldvars|((vars Rtar)_{nR..(nR+ntarf-1)})*(RtoRtar(f**R^{-mtar}));     ;     Rsource:=kk[oldvarlist,X_1..X_(rank source f),	  Degrees=>degrees source g];     i:=ideal mingens ker map(Rtar, Rsource, g);     Ranswer:=kk[oldvarlist,X_1..X_(rank source f),	  Degrees=>(degrees source oldvars)|toList((rank source f):{1})];     substitute(i, Ranswer)     )isAnnihilated = f->(--     tests whether the symmetric algebra torsion is annihilated--     by the maximal ideal of the base ring. If it is also--     generated in degree (0,*), then this annihilation is equiv alent--     to its being concentrated in degrees (0,*).I0=ideal(0_(ring f));i=symmetricKernel(I0, f);L=ideal((gens i)_{0..rank source syz f -1});firstvars=ideal((vars ring i)_{0..2});0==(gens((firstvars)*i))%(L))S=kk[a,b,c,d,e]m=4i=ideal(a^m,b^m,c^m,d^m,e^m(a+b+c+d+e)^m)betti res iM=random(S^5,S^{5:-1})m=M-transpose MX=random(S^{5:-1},S^{-2})I1=pfaffians(4,m)I2=ideal( m*X)I=I1+I2betti res Ibetti res (I^2)betti res (I^3)betti res (I+ideal(a))linPres = I -> ideal mingens truncate(max flatten degrees source syz gens I -1, I)betti res (i=linPres ideal(a^2,b^2, c^2, d^2))betti res (i^2)betti res (i^3)betti res (i+ideal a)isGenerated gens i--trueisAnnihilated gens i--segmentation fault!!f=gens i--this is the basic operation:I0=ideal(0_(ring f))i=symmetricKernel(I0, f)L=ideal((gens i)_{0..rank source syz f -1});firstvars=ideal((vars ring i)_{0..2});0==(gens((firstvars)*i))%(L)